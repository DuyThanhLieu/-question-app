[{"/Users/ThanhLieu/reactjs eric/src/index.js":"1","/Users/ThanhLieu/reactjs eric/src/App.js":"2","/Users/ThanhLieu/reactjs eric/src/reportWebVitals.js":"3","/Users/ThanhLieu/reactjs eric/src/components/Mycomponent.js":"4","/Users/ThanhLieu/question-app/src/index.js":"5","/Users/ThanhLieu/question-app/src/App.js":"6","/Users/ThanhLieu/question-app/src/reportWebVitals.js":"7","/Users/ThanhLieu/question-app/src/components/Header/Header.js":"8","/Users/ThanhLieu/question-app/src/components/Admin/Admin.js":"9","/Users/ThanhLieu/question-app/src/components/User/User.js":"10","/Users/ThanhLieu/question-app/src/components/Home/HomePage.js":"11","/Users/ThanhLieu/question-app/src/components/Admin/SideBar.js":"12","/Users/ThanhLieu/question-app/src/components/Admin/Content/ManageUser.js":"13","/Users/ThanhLieu/question-app/src/components/Admin/Content/DashBoard.js":"14","/Users/ThanhLieu/question-app/src/components/Admin/Content/ModalCreateUser.js":"15","/Users/ThanhLieu/question-app/src/services/apiServices.js":"16","/Users/ThanhLieu/question-app/src/utils/axiosCustomize.js":"17","/Users/ThanhLieu/question-app/src/components/Admin/Content/TableUser.js":"18","/Users/ThanhLieu/question-app/src/components/Admin/Content/ModalUpdateUser.js":"19","/Users/ThanhLieu/question-app/src/components/Admin/Content/ModalViewUser.js":"20"},{"size":525,"mtime":1697012419833,"results":"21","hashOfConfig":"22"},{"size":151,"mtime":1697012421980,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1695956760425,"results":"24","hashOfConfig":"22"},{"size":509,"mtime":1696834509219,"results":"25","hashOfConfig":"26"},{"size":1350,"mtime":1701087103565,"results":"27","hashOfConfig":"28"},{"size":479,"mtime":1701144613804,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1695956760425,"results":"30","hashOfConfig":"28"},{"size":1629,"mtime":1697182903179,"results":"31","hashOfConfig":"28"},{"size":1289,"mtime":1701095972971,"results":"32","hashOfConfig":"28"},{"size":156,"mtime":1697083544359,"results":"33","hashOfConfig":"28"},{"size":907,"mtime":1697424802398,"results":"34","hashOfConfig":"28"},{"size":3916,"mtime":1697444602865,"results":"35","hashOfConfig":"28"},{"size":2968,"mtime":1702315746333,"results":"36","hashOfConfig":"28"},{"size":159,"mtime":1697443718178,"results":"37","hashOfConfig":"28"},{"size":6178,"mtime":1701685829758,"results":"38","hashOfConfig":"28"},{"size":837,"mtime":1702315403568,"results":"39","hashOfConfig":"28"},{"size":1190,"mtime":1701148002624,"results":"40","hashOfConfig":"28"},{"size":2163,"mtime":1702315128907,"results":"41","hashOfConfig":"28"},{"size":6952,"mtime":1702315787633,"results":"42","hashOfConfig":"28"},{"size":6144,"mtime":1702025682171,"results":"43","hashOfConfig":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4ngjzg",{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y93645",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"128mh87",{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"55"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"55"},"/Users/ThanhLieu/reactjs eric/src/index.js",[],"/Users/ThanhLieu/reactjs eric/src/App.js",[],"/Users/ThanhLieu/reactjs eric/src/reportWebVitals.js",[],["91","92"],"/Users/ThanhLieu/reactjs eric/src/components/Mycomponent.js",[],"/Users/ThanhLieu/question-app/src/index.js",[],["93","94"],"/Users/ThanhLieu/question-app/src/App.js",[],"/Users/ThanhLieu/question-app/src/reportWebVitals.js",[],"/Users/ThanhLieu/question-app/src/components/Header/Header.js",["95"],"import Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => {\n    return (\n        <Navbar expand=\"lg\" className=\"bg-body-tertiary\">\n            <Container>\n                {/* <Navbar.Brand href=\"#home\">Thanh Reactjs</Navbar.Brand> */}\n                <NavLink to='/' className='navbar-brand'>Thanh Reactjs</NavLink>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <NavLink to='/' className='nav-link'>Home</NavLink>\n                        <NavLink to='/users' className='nav-link'>Users</NavLink>\n                        <NavLink to='/admins' className='nav-link'>Admin</NavLink>\n                    </Nav>\n                    <button className='btn-login'>Log in</button>\n                    <button className='btn-signup'>Sign up</button>\n                    {/* <NavDropdown title=\"Settings\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item >Login</NavDropdown.Item>\n                        <NavDropdown.Item >\n                            Log out\n                        </NavDropdown.Item>\n                        <NavDropdown.Item >Profile</NavDropdown.Item>\n                    </NavDropdown> */}\n                    <Nav>\n\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    );\n}\n\nexport default Header;","/Users/ThanhLieu/question-app/src/components/Admin/Admin.js",["96"],"import SideBar from \"./SideBar\";\r\nimport './Admin.scss';\r\nimport { FaBars } from 'react-icons/fa';\r\nimport { useState } from \"react\";\r\nimport { Outlet } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nconst Admin = (props) => {\r\n    const [collapsed, setCollapsed] = useState(false);\r\n\r\n    return (\r\n        <div className=\"admin-container\">\r\n            <div className=\"admin-sidebar\">\r\n                <SideBar collapsed={collapsed} />\r\n            </div>\r\n            <div className=\"admin-content\">\r\n                <div className=\"admin-header\">\r\n                    <FaBars onClick={() => setCollapsed(!collapsed)} />\r\n                </div>\r\n                <div className=\"admin-main\">\r\n                    <Outlet />\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                theme=\"light\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Admin;","/Users/ThanhLieu/question-app/src/components/User/User.js",[],"/Users/ThanhLieu/question-app/src/components/Home/HomePage.js",[],"/Users/ThanhLieu/question-app/src/components/Admin/SideBar.js",["97","98","99","100","101","102"],"import 'react-pro-sidebar/dist/css/styles.css';\r\nimport {\r\n    ProSidebar,\r\n    Menu,\r\n    MenuItem,\r\n    SubMenu,\r\n    SidebarHeader,\r\n    SidebarFooter,\r\n    SidebarContent,\r\n} from 'react-pro-sidebar';\r\n\r\nimport { FaTachometerAlt, FaGem, FaList, FaGithub, FaRegLaughWink, FaHeart } from 'react-icons/fa';\r\nimport sidebarBg from '../../assets/bg2.jpg';\r\nimport { DiReact } from \"react-icons/di\";\r\nimport { GiReactor } from \"react-icons\";\r\nimport './SideBar.scss';\r\nimport { MdDashboard } from 'react-icons/md';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SideBar = (props) => {\r\n    const { image, collapsed, toggled, handleToggleSidebar } = props;\r\n    return (\r\n        <>\r\n            <ProSidebar\r\n                image={sidebarBg}\r\n                collapsed={collapsed}\r\n                toggled={toggled}\r\n                breakPoint=\"md\"\r\n                onToggle={handleToggleSidebar}\r\n            >\r\n                <SidebarHeader>\r\n                    <div\r\n                        style={{\r\n                            padding: '24px',\r\n                            textTransform: 'uppercase',\r\n                            fontWeight: 'bold',\r\n                            fontSize: 14,\r\n                            letterSpacing: '1px',\r\n                            overflow: 'hidden',\r\n                            textOverflow: 'ellipsis',\r\n                            whiteSpace: 'nowrap',\r\n                        }}\r\n                    >\r\n                        <DiReact size={'3em'} color={\"00bfff\"} />\r\n                        <span>Thanh reactjs</span>\r\n                    </div>\r\n                </SidebarHeader>\r\n\r\n                <SidebarContent>\r\n                    <Menu iconShape=\"circle\">\r\n                        <MenuItem\r\n                            icon={<MdDashboard />}\r\n                            suffix={<span className=\"badge red\">New</span>}\r\n                        >\r\n                            Dashboard\r\n                            <Link to=\"/admins\" />\r\n                        </MenuItem>\r\n                        {/* <MenuItem icon={<FaGem />}> components </MenuItem> */}\r\n                    </Menu>\r\n                    <Menu iconShape=\"circle\">\r\n                        <SubMenu\r\n                            // suffix={<span className=\"badge yellow\">3</span>}\r\n                            // icon={<FaRegLaughWink />}\r\n                            icon={<FaGem />}\r\n                            title=\"Features\"\r\n                        >\r\n                            <MenuItem>\r\n                                Quan ly Users\r\n                                <Link to=\"/admins/manage-users\" />\r\n                            </MenuItem>\r\n                            <MenuItem> Quan ly Bai Quiz</MenuItem>\r\n                            <MenuItem> Quan ly Cau Hoi</MenuItem>\r\n                        </SubMenu>\r\n\r\n                    </Menu>\r\n                </SidebarContent>\r\n\r\n                <SidebarFooter style={{ textAlign: 'center' }}>\r\n                    <div\r\n                        className=\"sidebar-btn-wrapper\"\r\n                        style={{\r\n                            padding: '20px 24px',\r\n                        }}\r\n                    >\r\n                        <a\r\n                            href=\"https://github.com/DuyThanhLieu/question-app\"\r\n                            target=\"_blank\"\r\n                            className=\"sidebar-btn\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <FaGithub />\r\n                            <span style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n                                Thanh hoc hoi React\r\n                            </span>\r\n                        </a>\r\n                    </div>\r\n                </SidebarFooter>\r\n            </ProSidebar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SideBar;","/Users/ThanhLieu/question-app/src/components/Admin/Content/ManageUser.js",[],"/Users/ThanhLieu/question-app/src/components/Admin/Content/DashBoard.js",[],"/Users/ThanhLieu/question-app/src/components/Admin/Content/ModalCreateUser.js",["103"],"import React from 'react';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport './ModalCreateUser.scss';\nimport { FcPlus } from 'react-icons/fc';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { postCreateNewuser } from '../../../services/apiServices';\nconst ModalCreateUser = (props) => {\n    const { show, setShow } = props;\n    const handleClose = () => {\n        setShow(false)\n        setEmail(\"\");\n        setPassword(\"\");\n        setUsername(\"\");\n        setRole(\"USER\");\n        setImage(\"\");\n        setPreviewImage(\"\");\n    };\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n    const [role, setRole] = useState(\"USER\");\n    const [previewImage, setPreviewImage] = useState(\"\");\n\n    const handleUploadImage = (event) => {\n        if (event.target && event.target.files && event.target.files[0]) {\n            setPreviewImage(URL.createObjectURL(event.target.files[0]));\n            setImage(event.target.files[0]); //\n        } else {\n\n            // setPreviewImage(\"\"); ko uplao thi van hien thi anh \n        }\n        console.log('upload file ', event.target.files[0])\n        // cap lai state\n\n    }\n    const validateEmail = (email) => {\n        return String(email)\n            .toLowerCase()\n            .match(\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            );\n    };\n    const handSubmitCreateUser = async () => {\n\n        //validate email khong hop le thi dung khong chay data\n        const isValidEmail = validateEmail(email)\n        if (!isValidEmail) {\n            toast.error('invalid email')\n\n            return;\n        }\n        if (!password) {\n            toast.error('invalid password')\n\n            return;\n        }\n\n        //call apis\n        // let data = {\n        //     email: email,\n        //     password: password,\n        //     username: username,\n        //     role: role,\n        //     userImage: image,\n        // }\n        // console.log(data)\n\n        // goi dung method de thuc hien api dung muc dich\n        let data = await postCreateNewuser(email, password, username, role, image)\n        console.log('>>>>>component res:', data);\n        //check dieu kien tao user thanh cong\n        if (data && data.EC === 0) {\n            toast.success(data.EM)\n            handleClose();\n            await props.fetchListUsers();\n            // con goi len cha \n        }\n        if (data && data.EC !== 0) {\n            toast.error(data.EM);\n        }\n    }\n\n    return (\n        <>\n            {/* <Button variant=\"primary\" onClick={handleShow}>\n                Show Dialog add new user\n            </Button> */}\n\n            <Modal show={show} onHide={handleClose} size=\"xl\" backdrop=\"static\"\n                className='modal-add-user'>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add new user</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form class=\"row g-3\">\n                        <div class=\"col-md-6\">\n                            <label class=\"form-label\">Email</label>\n                            <input type=\"email\"\n                                class=\"form-control\"\n                                value={email}\n                                onChange={(event) => setEmail(event.target.value)}\n                            // onchange xu li cac loai input voi state cho no no value vao o input\n                            />\n                        </div>\n                        <div class=\"col-md-6\">\n                            <label class=\"form-label\">Password</label>\n                            <input type=\"password\" class=\"form-control\" value={password}\n                                onChange={(event) => setPassword(event.target.value)} />\n                        </div>\n\n                        <div class=\"col-md-6\">\n                            <label class=\"form-label\">Username</label>\n                            <input type=\"text\" class=\"form-control\" value={username}\n                                onChange={(event) => setUsername(event.target.value)} />\n                        </div>\n                        <div class=\"col-md-4\">\n                            <label class=\"form-label\">Role</label>\n                            <select class=\"form-select\" onChange={(event) => setRole(event.target.value)}>\n                                <option value=\"USER\">USER</option>\n                                <option value=\"ADMIN\">ADMIN</option>\n                            </select>\n                        </div>\n                        <div className='col-md-12'>\n                            <label class=\"form-label label-upload\" htmlFor='labelUpload'>\n                                <FcPlus /> Upload File Image\n                            </label>\n                            <input type=\"file\" id=\"labelUpload\" hidden\n                                onChange={(event) => handleUploadImage(event)} />\n                            {/* them hidden de an icon mat dinh upload file di */}\n                        </div>\n                        <div className='col-md-12 img-preview'>\n                            {previewImage ?\n                                <img src={previewImage} />\n                                :\n                                <span> Preview Image</span>\n                            }\n                        </div>\n                    </form>\n                </Modal.Body >\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={() => handSubmitCreateUser(Image)}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal >\n        </>\n    )\n}\nexport default ModalCreateUser;","/Users/ThanhLieu/question-app/src/services/apiServices.js",[],"/Users/ThanhLieu/question-app/src/utils/axiosCustomize.js",[],"/Users/ThanhLieu/question-app/src/components/Admin/Content/TableUser.js",[],"/Users/ThanhLieu/question-app/src/components/Admin/Content/ModalUpdateUser.js",["104","105"],"/Users/ThanhLieu/question-app/src/components/Admin/Content/ModalViewUser.js",["106","107","108","109"],"import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport './ModalCreateUser.scss';\nimport { FcPlus } from 'react-icons/fc';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport _ from 'lodash';\nconst ModalViewUser = (props) => {\n    const { show, setShow, dataUpdateUser } = props;\n\n    const handleClose = () => {\n        setShow(false)\n        setEmail(\"\");\n        setPassword(\"\");\n        setUsername(\"\");\n        setRole(\"USER\");\n        setImage(\"\");\n        setPreviewImage(\"\");\n        props.resetUpdateDataUser();\n    };\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n    const [role, setRole] = useState(\"USER\");\n    const [previewImage, setPreviewImage] = useState(\"\");\n    useEffect(() => {\n        if (!_.isEmpty(dataUpdateUser)) {\n            console.log('run ueseffect', dataUpdateUser);\n            //update\n            setEmail(dataUpdateUser.email);\n            setUsername(dataUpdateUser.username);\n            setRole(dataUpdateUser.role);\n            // check neu co anh thi cap nhat \n            if (dataUpdateUser.image) {\n                setPreviewImage(`data:image/jpeg;base64,${dataUpdateUser.image}`);\n            }\n        }\n    }, [props.dataUpdateUser]);\n    function handleUploadImage(event) {\n        if (event.target && event.target.files && event.target.files[0]) {\n            setPreviewImage(URL.createObjectURL(event.target.files[0]));\n            setImage(event.target.files[0]); //\n        } else {\n            // setPreviewImage(\"\"); ko uplao thi van hien thi anh \n        }\n        console.log('upload file ', event.target.files[0]);\n        // cap lai state\n    }\n    const validateEmail = (email) => {\n        return String(email)\n            .toLowerCase()\n            .match(\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            );\n    };\n    const handSubmitCreateUser = async () => {\n\n        //validate email khong hop le thi dung khong chay data\n        const isValidEmail = validateEmail(email)\n        if (!isValidEmail) {\n            toast.error('invalid email')\n\n            return;\n        }\n\n\n        // goi dung method de thuc hien api dung muc dich\n\n\n    }\n\n    console.log('check data update', props.dataUpdateUser);\n    return (\n        <>\n            {/* <Button variant=\"primary\" onClick={handleShow}>\n                Show Dialog add new user\n            </Button> */}\n\n            <Modal show={show} onHide={handleClose} size=\"xl\" backdrop=\"static\"\n                className='modal-add-user'>\n                <Modal.Header closeButton>\n                    <Modal.Title>View a user</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form class=\"row g-3\">\n                        <div class=\"col-md-6\">\n                            <label class=\"form-label\">Email</label>\n                            <input type=\"email\"\n                                class=\"form-control\"\n                                value={email}\n                                disabled={true} // check khong cho update\n                                onChange={(event) => setEmail(event.target.value)}\n                            // onchange xu li cac loai input voi state cho no no value vao o input\n                            />\n                        </div>\n                        <div class=\"col-md-6\">\n                            <label class=\"form-label\">Password</label>\n                            <input type=\"password\" class=\"form-control\" value={password}\n                                disabled={true}\n                                onChange={(event) => setPassword(event.target.value)} />\n                        </div>\n\n                        <div class=\"col-md-6\">\n                            <label class=\"form-label\">Username</label>\n                            <input type=\"text\" class=\"form-control\" value={username}\n                                onChange={(event) => setUsername(event.target.value)} />\n                        </div>\n                        <div class=\"col-md-4\">\n                            <label class=\"form-label\">Role</label>\n                            <select class=\"form-select\" value={role}\n                                onChange={(event) => setRole(event.target.value)}>\n                                <option value=\"USER\">USER</option>\n                                <option value=\"ADMIN\">ADMIN</option>\n                            </select>\n                        </div>\n                        <div className='col-md-12'>\n                            <label class=\"form-label label-upload\" htmlFor='labelUpload'>\n                                <FcPlus /> Upload File Image\n                            </label>\n                            <input type=\"file\" id=\"labelUpload\" hidden\n                                onChange={(event) => handleUploadImage(event)} />\n                            {/* them hidden de an icon mat dinh upload file di */}\n                        </div>\n                        <div className='col-md-12 img-preview'>\n                            {previewImage ?\n                                <img src={previewImage} />\n                                :\n                                <span> Preview Image</span>\n                            }\n                        </div>\n                    </form>\n                </Modal.Body >\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    {/* <Button variant=\"primary\" onClick={() => handSubmitCreateUser(Image)}>\n                        Save\n                </Button>  */}\n                </Modal.Footer>\n            </Modal >\n        </>\n    )\n}\nexport default ModalViewUser;",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"110","replacedBy":"114"},{"ruleId":"112","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":19},{"ruleId":"116","severity":1,"message":"120","line":6,"column":26,"nodeType":"118","messageId":"119","endLine":6,"endColumn":31},{"ruleId":"116","severity":1,"message":"121","line":12,"column":10,"nodeType":"118","messageId":"119","endLine":12,"endColumn":25},{"ruleId":"116","severity":1,"message":"122","line":12,"column":34,"nodeType":"118","messageId":"119","endLine":12,"endColumn":40},{"ruleId":"116","severity":1,"message":"123","line":12,"column":52,"nodeType":"118","messageId":"119","endLine":12,"endColumn":66},{"ruleId":"116","severity":1,"message":"124","line":12,"column":68,"nodeType":"118","messageId":"119","endLine":12,"endColumn":75},{"ruleId":"116","severity":1,"message":"125","line":15,"column":10,"nodeType":"118","messageId":"119","endLine":15,"endColumn":19},{"ruleId":"116","severity":1,"message":"126","line":21,"column":13,"nodeType":"118","messageId":"119","endLine":21,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":137,"column":33,"nodeType":"129","endLine":137,"endColumn":59},{"ruleId":"130","severity":1,"message":"131","line":41,"column":8,"nodeType":"132","endLine":41,"endColumn":30,"suggestions":"133"},{"ruleId":"127","severity":1,"message":"128","line":153,"column":33,"nodeType":"129","endLine":153,"endColumn":59},{"ruleId":"116","severity":1,"message":"126","line":26,"column":12,"nodeType":"118","messageId":"119","endLine":26,"endColumn":17},{"ruleId":"130","severity":1,"message":"131","line":41,"column":8,"nodeType":"132","endLine":41,"endColumn":30,"suggestions":"134"},{"ruleId":"116","severity":1,"message":"135","line":59,"column":11,"nodeType":"118","messageId":"119","endLine":59,"endColumn":31},{"ruleId":"127","severity":1,"message":"128","line":129,"column":33,"nodeType":"129","endLine":129,"endColumn":59},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],["136"],["137"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","'FaTachometerAlt' is defined but never used.","'FaList' is defined but never used.","'FaRegLaughWink' is defined but never used.","'FaHeart' is defined but never used.","'GiReactor' is defined but never used.","'image' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dataUpdateUser'. Either include it or remove the dependency array.","ArrayExpression",["138"],["139"],"'handSubmitCreateUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"140","fix":"142"},"Update the dependencies array to be: [dataUpdateUser, props.dataUpdateUser]",{"range":"143","text":"144"},{"range":"145","text":"144"},[1470,1492],"[dataUpdateUser, props.dataUpdateUser]",[1457,1479]]