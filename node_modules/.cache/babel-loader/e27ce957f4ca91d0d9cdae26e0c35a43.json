{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from \"./reducer/rootReducer\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport storage from 'redux-persist/lib/storage';\nimport { persistStore, persistReducer } from 'redux-persist';\nconst persistConfig = {\n  key: 'root',\n  storage\n}; //luu tt nguoi dung \n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)));\nlet persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"names":["applyMiddleware","createStore","thunk","rootReducer","composeWithDevTools","storage","persistStore","persistReducer","persistConfig","key","persistedReducer","store","persistor"],"sources":["/Users/ThanhLieu/Desktop/question-app/src/redux/store.js"],"sourcesContent":["import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk'\nimport rootReducer from \"./reducer/rootReducer\"\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport storage from 'redux-persist/lib/storage'\nimport { persistStore, persistReducer } from 'redux-persist'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}//luu tt nguoi dung \n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\nconst store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)));\nlet persistor = persistStore(store)\nexport { store, persistor }"],"mappings":"AAAA,SAASA,eAAe,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAE5D,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EACXJ;AACJ,CAAC;;AAED,MAAMK,gBAAgB,GAAGH,cAAc,CAACC,aAAa,EAAEL,WAAW,CAAC;AACnE,MAAMQ,KAAK,GAAGV,WAAW,CAACS,gBAAgB,EAAEN,mBAAmB,CAACJ,eAAe,CAACE,KAAK,CAAC,CAAC,CAAC;AACxF,IAAIU,SAAS,GAAGN,YAAY,CAACK,KAAK,CAAC;AACnC,SAASA,KAAK,EAAEC,SAAS"},"metadata":{},"sourceType":"module"}