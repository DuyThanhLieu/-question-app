{"ast":null,"code":"var _jsxFileName = \"/Users/ThanhLieu/Desktop/question-app/src/components/Auth/Register.js\",\n    _s = $RefreshSig$();\n\n// Import necessary dependencies and components\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { postRegister } from '../../services/apiServices'; // Assuming you have a register API service\n\nimport { toast } from 'react-toastify';\nimport './Register.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  // Define state variables for registration form\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUserName] = useState(''); // UseNavigate hook for navigation\n\n  const navigator = useNavigate(); // State to manage password visibility\n\n  const [isShowPassword, setShowPassword] = useState(false);\n\n  const validateEmail = email => {\n    return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n  }; // Function to handle registration\n\n\n  const handleRegister = async () => {\n    // Validation logic\n    const isValidEmail = validateEmail(email);\n\n    if (!isValidEmail) {\n      toast.error('invalid email');\n      return;\n    }\n\n    if (!password) {\n      toast.error('invalid password');\n      return;\n    }\n\n    if (!email || !password || !username) {\n      toast.error('Email, password, and username are required');\n      return;\n    } // Submit registration data to the API\n\n\n    const data = await postRegister(email, password, username);\n\n    if (data && data.EC === 0) {\n      toast.success(data.EM); // You can navigate to the login page after successful registration\n\n      navigator('/login'); //tao tai khoan thanh cong thi quay ve tang login\n    } else if (data && +data.EC !== 0) {\n      toast.error(data.EM);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header \",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"    Don't have an account yet?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          navigator('/login');\n        },\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title col-4 mx-auto\",\n      children: \"Thanh code Reactjs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wellcome col-4 mx-auto\",\n      children: \"Hello, who's this?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-form col-4 mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: event => setEmail(event.target.value),\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: isShowPassword ? 'text' : 'password',\n          value: password,\n          onChange: event => setPassword(event.target.value),\n          className: \"form-control password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), isShowPassword ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icons-eye\",\n          onClick: () => setShowPassword(false),\n          children: /*#__PURE__*/_jsxDEV(VscEye, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icons-eye\",\n          onClick: () => setShowPassword(true),\n          children: /*#__PURE__*/_jsxDEV(VscEyeClosed, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"User Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: event => setUserName(event.target.value),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-submit\",\n          onClick: handleRegister,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"back\",\n          onClick: () => navigator('/'),\n          children: \"< < Go to Homepage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"ZhDvXxM0IhcmhT5zFYpLPgsUGWM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/ThanhLieu/Desktop/question-app/src/components/Auth/Register.js"],"names":["React","useState","useNavigate","postRegister","toast","Register","email","setEmail","password","setPassword","username","setUserName","navigator","isShowPassword","setShowPassword","validateEmail","String","toLowerCase","match","handleRegister","isValidEmail","error","data","EC","success","EM","event","target","value"],"mappings":"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","sourcesContent":["// Import necessary dependencies and components\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { postRegister } from '../../services/apiServices'; // Assuming you have a register API service\nimport { toast } from 'react-toastify';\nimport './Register.scss';\n\nconst Register = () => {\n    // Define state variables for registration form\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [username, setUserName] = useState('');\n\n    // UseNavigate hook for navigation\n    const navigator = useNavigate();\n\n    // State to manage password visibility\n    const [isShowPassword, setShowPassword] = useState(false);\n    const validateEmail = (email) => {\n        return String(email)\n            .toLowerCase()\n            .match(\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            );\n    };\n    // Function to handle registration\n    const handleRegister = async () => {\n        // Validation logic\n        const isValidEmail = validateEmail(email)\n        if (!isValidEmail) {\n            toast.error('invalid email')\n\n            return;\n        }\n        if (!password) {\n            toast.error('invalid password')\n\n            return;\n        }\n        if (!email || !password || !username) {\n            toast.error('Email, password, and username are required');\n            return;\n        }\n\n        // Submit registration data to the API\n        const data = await postRegister(email, password, username);\n\n        if (data && data.EC === 0) {\n            toast.success(data.EM);\n            // You can navigate to the login page after successful registration\n            navigator('/login'); //tao tai khoan thanh cong thi quay ve tang login\n        } else if (data && +data.EC !== 0) {\n            toast.error(data.EM);\n        }\n    };\n\n    return (\n        <div className=\"register-container\">\n            {/* Similar structure to the login form */}\n            {/* ... (You can customize the header and other UI elements) */}\n            <div className='header '>\n                <span>    Don't have an account yet?</span>\n                <button onClick={() => { navigator('/login') }}>Sign in</button>\n            </div>\n            <div className='title col-4 mx-auto'>\n                Thanh code Reactjs\n            </div>\n            <div className='wellcome col-4 mx-auto'>\n                Hello, who's this?\n            </div>\n            <div className=\"content-form col-4 mx-auto\">\n                <div className=\"form-group\">\n                    <label>Email</label>\n                    <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(event) => setEmail(event.target.value)}\n                        className=\"form-control\"\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input\n                        type={isShowPassword ? 'text' : 'password'}\n                        value={password}\n                        onChange={(event) => setPassword(event.target.value)}\n                        className=\"form-control password\"\n                        required\n                    />\n\n                    {isShowPassword ?\n                        <span className='icons-eye'\n                            onClick={() => setShowPassword(false)}\n                        >\n                            <VscEye />\n                        </span>\n                        :\n                        <span className='icons-eye'\n                            onClick={() => setShowPassword(true)}\n                        >\n                            <VscEyeClosed />\n                        </span>\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <label>User Name</label>\n                    <input\n                        type=\"text\"\n                        value={username}\n                        onChange={(event) => setUserName(event.target.value)}\n                        className=\"form-control\"\n                    />\n                </div>\n                {/* Add any additional fields you need for registration */}\n                <div>\n                    <button className=\"btn-submit\" onClick={handleRegister}>\n                        Register\n                    </button>\n                </div>\n                {/* Navigation link to go back to the homepage */}\n                <div className=\"text-center\">\n                    <span className=\"back\" onClick={() => navigator('/')}>\n                        &#60; &#60; Go to Homepage\n                    </span>\n                </div>\n            </div>\n        </div >\n    );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}