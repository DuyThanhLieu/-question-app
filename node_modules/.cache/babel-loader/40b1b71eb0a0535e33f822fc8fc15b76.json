{"ast":null,"code":"var _jsxFileName = \"/Users/ThanhLieu/question-app/src/components/Admin/Content/ManageUser.js\",\n    _s = $RefreshSig$();\n\nimport ModalCreateUser from \"./ModalCreateUser\";\nimport './ManageUser.scss';\nimport { FcPlus } from 'react-icons/fc';\nimport { useEffect, useState } from \"react\";\nimport TableUser from \"./TableUser\";\nimport { getAllUsers } from '../../../services/apiServices';\nimport ModalUpdateUser from \"./ModalUpdateUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ManageUser = props => {\n  _s();\n\n  const [ShowModalCreateUser, setShowModalCreateUser] = useState(false);\n  const [ShowModalUpdateUser, setShowModalUpdateUser] = useState(false);\n  const [dataUpdateUser, setDataUpdateUser] = useState({});\n  const [ListUsers, setListUsers] = useState([]); //componentDidMount\n\n  useEffect(() => {\n    fetchListUsers();\n  }, []); //truyen [] de chay 1 lan\n\n  const fetchListUsers = async () => {\n    let res = await getAllUsers(); // console.log(res);\n\n    if (res.EC === 0) {\n      setListUsers(res.DT);\n    }\n  };\n\n  const handleClickBtnUpdate = user => {\n    setShowModalUpdateUser(true);\n    setDataUpdateUser(user); // console.log('update user', user);\n\n    const updatedRole = user.role === 'ADMIN' ? 'USER' : 'ADMIN';\n    setDataUpdateUser({ ...user,\n      role: updatedRole\n    });\n  };\n\n  const resetUpdateDataUser = () => {\n    setDataUpdateUser({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage-user-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Manage User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-add-new\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => setShowModalCreateUser(true),\n          children: [/*#__PURE__*/_jsxDEV(FcPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), \"Add new users\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-users-container\",\n        children: /*#__PURE__*/_jsxDEV(TableUser, {\n          ListUsers: ListUsers,\n          handleClickBtnUpdate: handleClickBtnUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalCreateUser, {\n        show: ShowModalCreateUser,\n        setShow: setShowModalCreateUser,\n        fetchListUsers: fetchListUsers // testFunciton={testFunction}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalUpdateUser, {\n        show: ShowModalUpdateUser,\n        setShow: setShowModalUpdateUser,\n        dataUpdateUser: dataUpdateUser,\n        fetchListUsers: fetchListUsers,\n        resetUpdateDataUser: resetUpdateDataUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ManageUser, \"CgJXXsoKaPvpESEv1hC/UbW3b/k=\");\n\n_c = ManageUser;\nexport default ManageUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageUser\");","map":{"version":3,"sources":["/Users/ThanhLieu/question-app/src/components/Admin/Content/ManageUser.js"],"names":["ModalCreateUser","FcPlus","useEffect","useState","TableUser","getAllUsers","ModalUpdateUser","ManageUser","props","ShowModalCreateUser","setShowModalCreateUser","ShowModalUpdateUser","setShowModalUpdateUser","dataUpdateUser","setDataUpdateUser","ListUsers","setListUsers","fetchListUsers","res","EC","DT","handleClickBtnUpdate","user","updatedRole","role","resetUpdateDataUser"],"mappings":"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","sourcesContent":["import ModalCreateUser from \"./ModalCreateUser\";\nimport './ManageUser.scss';\nimport { FcPlus } from 'react-icons/fc';\nimport { useEffect, useState } from \"react\";\nimport TableUser from \"./TableUser\";\nimport { getAllUsers } from '../../../services/apiServices';\nimport ModalUpdateUser from \"./ModalUpdateUser\";\n\nconst ManageUser = (props) => {\n    const [ShowModalCreateUser, setShowModalCreateUser] = useState(false);\n    const [ShowModalUpdateUser, setShowModalUpdateUser] = useState(false);\n    const [dataUpdateUser, setDataUpdateUser] = useState({});\n\n    const [ListUsers, setListUsers] = useState([])\n    //componentDidMount\n    useEffect(() => {\n        fetchListUsers();\n    }, []);\n    //truyen [] de chay 1 lan\n    const fetchListUsers = async () => {\n        let res = await getAllUsers()\n        // console.log(res);\n        if (res.EC === 0) {\n            setListUsers(res.DT)\n        }\n    }\n    const handleClickBtnUpdate = (user) => {\n        setShowModalUpdateUser(true);\n        setDataUpdateUser(user);\n        // console.log('update user', user);\n        const updatedRole = user.role === 'ADMIN' ? 'USER' : 'ADMIN';\n        setDataUpdateUser({ ...user, role: updatedRole });\n    }\n    const resetUpdateDataUser = () => {\n        setDataUpdateUser({})\n    }\n\n    return (\n        <div className='manage-user-container'>\n            <div className='title'>\n                Manage User\n            </div>\n            <div className='users-content'>\n                <div className=\"btn-add-new\">\n                    <button className=\"btn btn-primary\"\n                        onClick={() => setShowModalCreateUser(true)}>\n                        <FcPlus />Add new users</button>\n                </div>\n                <div className=\"table-users-container\">\n                    <TableUser ListUsers={ListUsers}\n                        handleClickBtnUpdate={handleClickBtnUpdate} />\n                </div>\n                <ModalCreateUser show={ShowModalCreateUser}\n                    setShow={setShowModalCreateUser}\n                    fetchListUsers={fetchListUsers}\n                // testFunciton={testFunction}\n                />\n                <ModalUpdateUser\n                    show={ShowModalUpdateUser}\n                    setShow={setShowModalUpdateUser}\n                    dataUpdateUser={dataUpdateUser}\n                    fetchListUsers={fetchListUsers}\n                    resetUpdateDataUser={resetUpdateDataUser}\n                />\n            </div>\n        </div >\n    )\n}\n\nexport default ManageUser;"]},"metadata":{},"sourceType":"module"}