{"ast":null,"code":"var _jsxFileName = \"/Users/ThanhLieu/Desktop/question-app/src/components/Admin/Content/TableUserPaginate.js\",\n    _s = $RefreshSig$();\n\n// phan trang\nimport { useEffect, useState } from 'react';\nimport ReactPaginate from 'react-paginate'; // const items = [...Array(33).keys()];\n// function Items({ currentItems }) {\n//     return (\n//         <div className=\"items\">\n//             {currentItems && currentItems.map((item) => (\n//                 <div>\n//                     <h3>Item #{item}</h3>\n//                 </div>\n//             ))}\n//         </div>\n//     );\n// }\n// const PaginatedItems = ({ itemsPerPage }) => {\n//     // We start with an empty list of items.\n//     const [currentItems, setCurrentItems] = useState(null);\n//     // Here we use item offsets; we could also use page offsets\n//     // following the API or data you're working with.\n//     const [itemOffset, setItemOffset] = useState(0);\n//     useEffect(() => {\n//         // Fetch items from another resources.\n//         const endOffset = itemOffset + itemsPerPage;\n//         console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n//         setCurrentItems(items.slice(itemOffset, endOffset));\n//         setPageCount(Math.ceil(items.length / itemsPerPage));\n//     }, [itemOffset, itemsPerPage]);\n//     return (\n//         <>\n//             <Items currentItems={currentItems} />\n//         </>\n//     );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TableUserPaginate = props => {\n  _s();\n\n  const {\n    ListUsers\n  } = props;\n  const [pageCount, setPageCount] = useState(0); // Invoke when user click to request another page.\n\n  const handlePageClick = event => {\n    console.log(`User requested page number ${event.selected + 1} `); //string + number tra ra string can them dau cong\n\n    props.fetchListUsersWithPaginate(+event.selected + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [ListUsers && ListUsers.length > 0 && ListUsers.map((item, index) => {\n          // index la so tt bat dau tu 0 ->1\n          //item la obj duoc lap\n          // console.log(index)\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary\",\n                onClick: () => props.handleClickBtnView(item),\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-warning mx-3\",\n                onClick: () => props.handleClickBtnUpdate(item),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => props.handleClickBtnDelete(item),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this)]\n          }, `table-users-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this);\n        }), ListUsers && ListUsers.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: '4',\n            children: \" Not Found data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      nextLabel: \"next >\",\n      onPageChange: handlePageClick,\n      pageRangeDisplayed: 3,\n      marginPagesDisplayed: 2,\n      pageCount: 5,\n      previousLabel: \"< previous\",\n      pageClassName: \"page-item\",\n      pageLinkClassName: \"page-link\",\n      previousClassName: \"page-item\",\n      previousLinkClassName: \"page-link\",\n      nextClassName: \"page-item\",\n      nextLinkClassName: \"page-link\",\n      breakLabel: \"...\",\n      breakClassName: \"page-item\",\n      breakLinkClassName: \"page-link\",\n      containerClassName: \"pagination\",\n      activeClassName: \"active\",\n      renderOnZeroPageCount: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TableUserPaginate, \"MbrF3pzvncvdI+sX4pIdll9z2eo=\");\n\n_c = TableUserPaginate;\nexport default TableUserPaginate;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableUserPaginate\");","map":{"version":3,"sources":["/Users/ThanhLieu/Desktop/question-app/src/components/Admin/Content/TableUserPaginate.js"],"names":["useEffect","useState","ReactPaginate","TableUserPaginate","props","ListUsers","pageCount","setPageCount","handlePageClick","event","console","log","selected","fetchListUsersWithPaginate","length","map","item","index","id","username","email","role","handleClickBtnView","handleClickBtnUpdate","handleClickBtnDelete"],"mappings":"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","sourcesContent":["\n// phan trang\nimport { useEffect, useState } from 'react';\nimport ReactPaginate from 'react-paginate';\n\n\n\n// const items = [...Array(33).keys()];\n\n// function Items({ currentItems }) {\n//     return (\n//         <div className=\"items\">\n//             {currentItems && currentItems.map((item) => (\n//                 <div>\n//                     <h3>Item #{item}</h3>\n//                 </div>\n//             ))}\n//         </div>\n//     );\n// }\n\n// const PaginatedItems = ({ itemsPerPage }) => {\n//     // We start with an empty list of items.\n//     const [currentItems, setCurrentItems] = useState(null);\n\n//     // Here we use item offsets; we could also use page offsets\n//     // following the API or data you're working with.\n//     const [itemOffset, setItemOffset] = useState(0);\n\n//     useEffect(() => {\n//         // Fetch items from another resources.\n//         const endOffset = itemOffset + itemsPerPage;\n//         console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n//         setCurrentItems(items.slice(itemOffset, endOffset));\n//         setPageCount(Math.ceil(items.length / itemsPerPage));\n//     }, [itemOffset, itemsPerPage]);\n\n\n\n//     return (\n//         <>\n//             <Items currentItems={currentItems} />\n\n//         </>\n//     );\n// }\nconst TableUserPaginate = (props) => {\n    const { ListUsers } = props;\n    const [pageCount, setPageCount] = useState(0);\n    // Invoke when user click to request another page.\n    const handlePageClick = (event) => {\n        console.log(`User requested page number ${event.selected + 1} `); //string + number tra ra string can them dau cong\n        props.fetchListUsersWithPaginate(+event.selected + 1)\n    };\n\n    return (\n        <>\n            <table className=\"table table-hover table-bordered\">\n                <thead>\n                    <tr >\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">Username</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Role</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {ListUsers && ListUsers.length > 0 &&\n                        ListUsers.map((item, index) => {\n                            // index la so tt bat dau tu 0 ->1\n                            //item la obj duoc lap\n                            // console.log(index)\n                            return (\n                                <tr key={`table-users-${index}`}>\n                                    <td>{item.id}</td>\n                                    <td>{item.username}</td>\n                                    <td>{item.email}</td>\n                                    <td>{item.role}</td>\n                                    <td>\n                                        <button className='btn btn-secondary'\n                                            onClick={() => props.handleClickBtnView(item)}\n                                        >View</button>\n                                        <button className='btn btn-warning mx-3'\n                                            onClick={() => props.handleClickBtnUpdate(item)}\n                                        >Update</button>\n                                        <button className='btn btn-danger'\n                                            onClick={() => props.handleClickBtnDelete(item)}\n                                        >\n                                            Delete</button>\n                                    </td>\n                                </tr>\n                            )\n                        })\n                    }\n                    {ListUsers && ListUsers.length === 0 &&\n                        <tr>\n                            <td colSpan={'4'}> Not Found data</td>\n\n                        </tr>}\n                </tbody>\n            </table>\n            {/* <PaginatedItems itemsPerPage={5} /> */}\n            <ReactPaginate\n                nextLabel=\"next >\"\n                onPageChange={handlePageClick}\n                pageRangeDisplayed={3}\n                marginPagesDisplayed={2}\n                pageCount={5}\n                previousLabel=\"< previous\"\n                pageClassName=\"page-item\"\n                pageLinkClassName=\"page-link\"\n                previousClassName=\"page-item\"\n                previousLinkClassName=\"page-link\"\n                nextClassName=\"page-item\"\n                nextLinkClassName=\"page-link\"\n                breakLabel=\"...\"\n                breakClassName=\"page-item\"\n                breakLinkClassName=\"page-link\"\n                containerClassName=\"pagination\"\n                activeClassName=\"active\"\n                renderOnZeroPageCount={null}\n            />\n        </>\n    )\n}\nexport default TableUserPaginate;"]},"metadata":{},"sourceType":"module"}