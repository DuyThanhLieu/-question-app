{"ast":null,"code":"import axios from \"../utils/axiosCustomize\";\n\nconst postCreateNewuser = (email, password, username, role, image) => {\n  //data can cho api\n  const data = new FormData();\n  data.append('email', email);\n  data.append('password', password);\n  data.append('username', username);\n  data.append('role', role);\n  data.append('userImage', image);\n  return axios.post('api/v1/participant', data);\n};\n\nconst getAllUsers = () => {\n  return axios.get('api/v1/participant/all');\n};\n\nconst putUpdateUser = (id, username, role, image) => {\n  //data can cho api\n  const data = new FormData();\n  data.append('id', id);\n  data.append('username', username);\n  data.append('role', role);\n  data.append('userImage', image);\n  return axios.put('api/v1/participant', data); //form data\n};\n\nconst deleteUser = userId => {\n  //axios yeu cau bien data\n  return axios.delete('api/v1/participant', {\n    data: {\n      id: userId\n    }\n  }); //truyen userId cho api\n};\n\nconst getUserWithPaginate = (page, limit) => {\n  //axios yeu cau bien data\n  return axios.get(`api/v1/participant?page=${page}&limit=${limit}`); //truyen userId cho api\n};\n\nconst postLogin = (userEmail, userPassword) => {\n  return axios.post(`api/v1/login`, {\n    email: userEmail,\n    password: userPassword\n  });\n};\n\nconst postRegister = (email, password, username, userPassword, userName) => {\n  return axios.post(`api/v1/register`, {\n    email,\n    password,\n    usernam\n  });\n};\n\nexport { postCreateNewuser, getAllUsers, putUpdateUser, deleteUser, getUserWithPaginate, postLogin, postRegister };","map":{"version":3,"sources":["/Users/ThanhLieu/Desktop/question-app/src/services/apiServices.js"],"names":["axios","postCreateNewuser","email","password","username","role","image","data","FormData","append","post","getAllUsers","get","putUpdateUser","id","put","deleteUser","userId","delete","getUserWithPaginate","page","limit","postLogin","userEmail","userPassword","postRegister","userName","usernam"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,yBAAlB;;AAEA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,EAA4BC,IAA5B,EAAkCC,KAAlC,KAA4C;AAClE;AACA,QAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,EAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBP,KAArB;AACAK,EAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBN,QAAxB;AACAI,EAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBL,QAAxB;AACAG,EAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBJ,IAApB;AACAE,EAAAA,IAAI,CAACE,MAAL,CAAY,WAAZ,EAAyBH,KAAzB;AACA,SAAON,KAAK,CAACU,IAAN,CAAW,oBAAX,EAAiCH,IAAjC,CAAP;AACH,CATD;;AAUA,MAAMI,WAAW,GAAG,MAAM;AACtB,SAAOX,KAAK,CAACY,GAAN,CAAU,wBAAV,CAAP;AACH,CAFD;;AAGA,MAAMC,aAAa,GAAG,CAACC,EAAD,EAAKV,QAAL,EAAeC,IAAf,EAAqBC,KAArB,KAA+B;AACjD;AACA,QAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,EAAAA,IAAI,CAACE,MAAL,CAAY,IAAZ,EAAkBK,EAAlB;AACAP,EAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBL,QAAxB;AACAG,EAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBJ,IAApB;AACAE,EAAAA,IAAI,CAACE,MAAL,CAAY,WAAZ,EAAyBH,KAAzB;AACA,SAAON,KAAK,CAACe,GAAN,CAAU,oBAAV,EAAgCR,IAAhC,CAAP,CAPiD,CAOJ;AAChD,CARD;;AASA,MAAMS,UAAU,GAAIC,MAAD,IAAY;AAC3B;AACA,SAAOjB,KAAK,CAACkB,MAAN,CAAa,oBAAb,EAAmC;AAAEX,IAAAA,IAAI,EAAE;AAAEO,MAAAA,EAAE,EAAEG;AAAN;AAAR,GAAnC,CAAP,CAF2B,CAG3B;AACH,CAJD;;AAKA,MAAME,mBAAmB,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzC;AACA,SAAOrB,KAAK,CAACY,GAAN,CAAW,2BAA0BQ,IAAK,UAASC,KAAM,EAAzD,CAAP,CAFyC,CAGzC;AACH,CAJD;;AAKA,MAAMC,SAAS,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B;AAC3C,SAAOxB,KAAK,CAACU,IAAN,CAAY,cAAZ,EAA2B;AAAER,IAAAA,KAAK,EAAEqB,SAAT;AAAoBpB,IAAAA,QAAQ,EAAEqB;AAA9B,GAA3B,CAAP;AACH,CAFD;;AAGA,MAAMC,YAAY,GAAG,CAACvB,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,EAA4BoB,YAA5B,EAA0CE,QAA1C,KAAuD;AACxE,SAAO1B,KAAK,CAACU,IAAN,CAAY,iBAAZ,EAA8B;AAAER,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBwB,IAAAA;AAAnB,GAA9B,CAAP;AACH,CAFD;;AAGA,SAAS1B,iBAAT,EAA4BU,WAA5B,EAAyCE,aAAzC,EAAwDG,UAAxD,EAAoEG,mBAApE,EAAyFG,SAAzF,EAAoGG,YAApG","sourcesContent":["import axios from \"../utils/axiosCustomize\";\n\nconst postCreateNewuser = (email, password, username, role, image) => {\n    //data can cho api\n    const data = new FormData();\n    data.append('email', email);\n    data.append('password', password);\n    data.append('username', username);\n    data.append('role', role);\n    data.append('userImage', image);\n    return axios.post('api/v1/participant', data);\n}\nconst getAllUsers = () => {\n    return axios.get('api/v1/participant/all');\n}\nconst putUpdateUser = (id, username, role, image) => {\n    //data can cho api\n    const data = new FormData();\n    data.append('id', id);\n    data.append('username', username);\n    data.append('role', role);\n    data.append('userImage', image);\n    return axios.put('api/v1/participant', data);//form data\n}\nconst deleteUser = (userId) => {\n    //axios yeu cau bien data\n    return axios.delete('api/v1/participant', { data: { id: userId } });\n    //truyen userId cho api\n};\nconst getUserWithPaginate = (page, limit) => {\n    //axios yeu cau bien data\n    return axios.get(`api/v1/participant?page=${page}&limit=${limit}`);\n    //truyen userId cho api\n};\nconst postLogin = (userEmail, userPassword) => {\n    return axios.post(`api/v1/login`, { email: userEmail, password: userPassword });\n}\nconst postRegister = (email, password, username, userPassword, userName) => {\n    return axios.post(`api/v1/register`, { email, password, usernam });\n}\nexport { postCreateNewuser, getAllUsers, putUpdateUser, deleteUser, getUserWithPaginate, postLogin, postRegister }"]},"metadata":{},"sourceType":"module"}